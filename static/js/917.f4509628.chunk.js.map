{"version":3,"file":"static/js/917.f4509628.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/modules/Contact/Contact.module.css?30d7","components/modules/Contact/Contact.jsx","components/modules/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/modules/Form/Form.module.css?f6fe","components/modules/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/modules/Filter/Filter.module.css?02c5","components/modules/Filter/Filter.jsx","Redux/Filter/filter-selectors.js","Redux/Contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","components/pages/ContactsPage/ContactsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Contact_text__V-OW6\",\"contact\":\"Contact_contact__n9LGk\",\"button\":\"Contact_button__TSg4i\"};","import PropTypes from 'prop-types';\nimport styles from \"./Contact.module.css\";\n\nexport const Contact = ({id, name, number, removeContact}) => {\n    return <li className={styles.contact}>\n        <p className={styles.text}>{name}: {number}</p>\n        <button className={styles.button} type='button' onClick={()=>removeContact(id)}>Delete</button>\n    </li>;\n}\n\nContact.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    removeContact: PropTypes.func.isRequired\n}","import { Contact } from 'components/modules/Contact/Contact';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({contacts, removeContact}) => {\n    return <ul>\n        {contacts.map(contact => (<Contact\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n            removeContact={removeContact}\n        />))}\n    </ul>;\n}\n\nContact.propTypes = {\n    contacts: PropTypes.array,\n    removeContact: PropTypes.func.isRequired\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__42kpy\",\"button\":\"Form_button__6n4PI\",\"label\":\"Form_label__vM2Wr\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from \"./Form.module.css\"\n\nexport const Form = ({onSubmit}) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case \"name\":\n                setName(value);\n                break;\n            case \"number\":\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({name, number});\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n    return <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.label}>Name\n            <input\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n            />\n        </label>\n        <label className={styles.label}>Number\n            <input\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                onChange={handleChange}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n            />\n        </label>\n        <button type='submit' className={styles.button}>Add contact</button>\n    </form>;\n}\n\nForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__k0KAx\",\"label\":\"Filter_label__yiDBy\"};","import PropTypes from 'prop-types';\nimport styles from \"./Filter.module.css\"\n\nexport const Filter = ({ handleInput, value }) => {\n    return <div className={styles.filter} >\n        <label className={styles.label} >Find contacts by name</label>\n        <input type=\"text\" name=\"filter\" value={value} onChange={handleInput}/>\n    </div>\n}\n\nFilter.propTypes = {\n    handleInput: PropTypes.func.isRequired,\n}","export const getContacts = store => store.contacts;\nexport const getFilter = store => store.filter;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n    const normalizedFilter = filter.toLowerCase();\n    if (!filter) {\n        return contacts;\n    }\n    const result = contacts.filter(({ name }) => {\n        return (name.toLowerCase().includes(normalizedFilter))\n    })\n    return result;\n}","export const getContacts = ({contacts}) => contacts.items;\nexport const getFilter = store => store.filter;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n    const normalizedFilter = filter.toLowerCase();\n    if (!filter) {\n        return contacts.items;\n    }\n    const result = contacts.items.filter(({ name }) => {\n        return (name.toLowerCase().includes(normalizedFilter))\n    })\n    return result;\n}","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__A8MMG\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ContactList } from '../modules/ContactList/ContactList';\nimport { Form } from '../modules/Form/Form';\nimport { Filter } from '../modules/Filter/Filter';\n\nimport { setFilter } from 'Redux/Filter/filter-slice';\nimport { getFilter } from 'Redux/Filter/filter-selectors';\nimport { getFilteredContacts } from 'Redux/Contacts/contacts-selectors';\nimport { fetchContacts, addContact, deleteContact } from 'Redux/Contacts/contacts-operations';\n\nimport styles from \"./Phonebook.module.css\"\n\nexport const Phonebook = () => {\n    const filter = useSelector(getFilter);\n    const contacts = useSelector(getFilteredContacts);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    },[dispatch])\n\n    const handleChange = ({ target }) => {\n        dispatch(setFilter(target.value));\n    }\n\n    const handleAddContact = ({ name, number }) => {\n        dispatch(addContact({ name, number }));\n      \n    }\n\n    const removeContact = id => {\n        dispatch(deleteContact(id));\n    }\n\n    return <div className={styles.phonebook}>\n        <h1>Phonebook</h1>\n        <Form\n            onSubmit={handleAddContact}\n        />\n        <h2>Contacts:</h2>\n        <Filter handleInput={handleChange} value={filter} />\n        {contacts && ( contacts.length ? <ContactList contacts={contacts} removeContact={removeContact} /> : null )}\n    </div>;\n}","import { Phonebook } from \"components/Phonebook/Phonebook\";\n\nconst ContactsPage = () => {\n    return <>\n        <Phonebook />\n    </>;\n}\n\nexport default ContactsPage;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Contact","id","name","number","removeContact","className","styles","type","onClick","ContactList","contacts","map","contact","propTypes","PropTypes","Form","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","preventDefault","onChange","pattern","title","required","Filter","handleInput","getFilter","store","filter","getFilteredContacts","normalizedFilter","toLowerCase","items","includes","Phonebook","useSelector","dispatch","useDispatch","useEffect","fetchContacts","addContact","target","setFilter","length","deleteContact","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}